Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLINNATE_InitSettings();
KBSECTION
//REGION SETTINGS
PROC
LLINNATE_InitSettings()
THEN
DB_LLINNATE_Skills_Race("REALLY_DWARF", "Target_PetrifyingTouch");
DB_LLINNATE_Skills_Race("REALLY_ELF", "Shout_FleshSacrifice");
DB_LLINNATE_Skills_Race("REALLY_HUMAN", "Shout_InspireStart");
DB_LLINNATE_Skills_Race("REALLY_LIZARD", "Cone_Flamebreath");

DB_LLINNATE_Skills_Origins("IFAN", "Summon_SoulWolf");
DB_LLINNATE_Skills_Origins("RED_PRINCE", "Target_DemonicStare");
DB_LLINNATE_Skills_Origins("SEBILLE", "Shout_BreakTheShackles");
DB_LLINNATE_Skills_Origins("BEAST", "Target_Squall");
DB_LLINNATE_Skills_Origins("LOHSE", "Target_MaddeningSong");
DB_LLINNATE_Skills_Origins("FANE", "Target_TimeWarp");
DB_LLINNATE_Skills_Origins("GENERIC", "Dome_CircleOfProtection");

//Flag, Racial Skill Replacer, Origin Skill Replacer
DB_LLINNATE_Skills_Replacers("LLINNATE_SkillReplacer_Necromancer", "Shout_LLINNATE_FleshSacrifice_Necromancer", "Storm_LLINNATE_DeathStorm");
DB_LLINNATE_Skills_Replacers("LLINNATE_SkillReplacer_TimeWarp", "", "Target_TimeWarp");
DB_LLINNATE_Skills_Replacers("LLINNATE_SkillReplacer_Elf", "Shout_FleshSacrifice", "");
DB_LLINNATE_Skills_Replacers("LLINNATE_SkillReplacer_Dwarf", "Target_PetrifyingTouch", "");
DB_LLINNATE_Skills_Replacers("LLINNATE_SkillReplacer_Human", "Shout_InspireStart", "");
DB_LLINNATE_Skills_Replacers("LLINNATE_SkillReplacer_Lizard", "Cone_Flamebreath", "");

PROC
LLINNATE_Updater_VersionUpdated((STRING)_OldVersion, "1.0.3.0")
THEN
LLINNATE_InitSettings();

PROC
LLINNATE_Updater_VersionUpdated((STRING)_OldVersion, "1.0.3.0")
AND
DB_IsPlayer(_Player)
AND
GetVarString(_Player, "LLINNATE_NewOriginSkill", "Storm_LLINNATE_DeathStorm")
AND
GetVarString(_Player, "LLINNATE_NewRacialSkill", "Shout_FleshSacrifice")
THEN
SetVarString(_Player, "LLINNATE_NewRacialSkill", "Shout_LLINNATE_FleshSacrifice_Necromancer");
CharacterRemoveSkill(_Player, "Shout_FleshSacrifice");
CharacterAddSkill(_Player, "Shout_LLINNATE_FleshSacrifice_Necromancer");
//END_REGION

//REGION EDITOR
PROC
LLINNATE_Updater_VersionUpdated((STRING)_OldVersion, "1.0.3.0")
AND
DB_Origins((CHARACTERGUID)S_Player_LLINNATE_Humans_Necromancer_Male_9eee8d13-3f86-4f09-baae-b70f88d1a89a)
THEN
NOT DB_Origins(S_Player_LLINNATE_Humans_Necromancer_Male_9eee8d13-3f86-4f09-baae-b70f88d1a89a);
NOT DB_Origins_OriginTag(S_Player_LLINNATE_Humans_Necromancer_Male_9eee8d13-3f86-4f09-baae-b70f88d1a89a, "GENERIC");
NOT DB_OriginNPCAlignment(S_Player_LLINNATE_Humans_Necromancer_Male_9eee8d13-3f86-4f09-baae-b70f88d1a89a, "Generic_Companions_1");
//END_REGION

//REGION TALENT_ADDING_PROCS
IF
SavegameLoaded(_,_,_,_)
AND
GlobalGetFlag("LLINNATE_TalentsInitialized", 0)
THEN
GlobalSetFlag("LLINNATE_TalentsInitialized");
LLINNATE_RefundPoints();

PROC
LLINNATE_RefundPoints()
AND
DB_IsPlayer(_Player)
AND
ObjectGetFlag(_Player, "LLINNATE_RefundedTalentPoints", 0)
AND
CharacterHasTalent(_Player, "QuickStep", _Refund1)
AND
CharacterHasTalent(_Player, "ViolentMagic", _Refund2)
AND
CharacterHasTalent(_Player, "AnimalEmpathy", _Refund3)
AND
IntegerSum(_Refund1, _Refund2, _RefundCombo1)
AND
IntegerSum(_RefundCombo1, _Refund3, _RefundTalentPoints)
AND
_RefundTalentPoints > 0
THEN
CharacterDisplayTextWithParam(_Player, "LLINNATE_DisplayText_RefundedPoints", _RefundTalentPoints);
CharacterAddTalentPoint(_Player, _RefundTalentPoints);
ObjectSetFlag(_Player, "LLINNATE_RefundedTalentPoints", 0);

PROC
LLINNATE_RefundPoints()
AND
DB_Origins(_Origin)
AND
NOT DB_IsPlayer(_Origin)
AND
CharacterIsDead(_Origin, 0)
AND
CharacterHasTalent(_Origin, "QuickStep", _Refund1)
AND
CharacterHasTalent(_Origin, "ViolentMagic", _Refund2)
AND
CharacterHasTalent(_Origin, "AnimalEmpathy", _Refund3)
AND
IntegerSum(_Refund1, _Refund2, _RefundCombo1)
AND
IntegerSum(_RefundCombo1, _Refund3, _RefundTalentPoints)
AND
_RefundTalentPoints > 0
THEN
DB_LLINNATE_Temp_OriginRefund(_Origin, _RefundTalentPoints);

IF
DB_LLINNATE_Temp_OriginRefund(_Origin, _RefundTalentPoints)
AND
NOT SysIsActive("LLINNATE_TS_RefundOrigins")
THEN
SysActivateGoal("LLINNATE_TS_RefundOrigins");
//END_REGION

//REGION ADD_TALENT

/* [OSITOOLS_ONLY]
PROC
LLINNATE_AddTalent((CHARACTERGUID)_Player, (STRING)_Talent)
AND
_Talent != "AnimalEmpathy"
THEN
NRD_PlayerSetBaseTalent(_Player, _Talent, 1);
CharacterAddCivilAbilityPoint(_Player, 0);

PROC
LLINNATE_AddTalent((CHARACTERGUID)_Player, "AnimalEmpathy")
AND
NRD_IsModLoaded(Kalavinkas_Combat_Enhanced_e844229e-b744-4294-9102-a7362a926f71, 0)
THEN
CharacterAddTalent(_Player, "AnimalEmpathy");

// PET_PAL_COMPATIBILITY for
// Kalavinkas_Combat_Enhanced_e844229e-b744-4294-9102-a7362a926f71

PROC
LLINNATE_AddTalent((CHARACTERGUID)_Player, "AnimalEmpathy")
AND
NRD_IsModLoaded(Kalavinkas_Combat_Enhanced_e844229e-b744-4294-9102-a7362a926f71, 1)
THEN
SetTag(_Player, "LLINNATE_PETPAL");
*/

// [BEGIN_NO_OSITOOLS]
PROC
LLINNATE_AddTalent((CHARACTERGUID)_Player, (STRING)_Talent)
AND
_Talent != "AnimalEmpathy"
THEN
CharacterAddTalent(_Player, _Talent);

PROC
LLINNATE_AddTalent((CHARACTERGUID)_Player, "AnimalEmpathy")
AND
NOT SysStatus("Kalavinka_DivinityUnleashed", _)
THEN
CharacterAddTalent(_Player, "AnimalEmpathy");

PROC
LLINNATE_AddTalent((CHARACTERGUID)_Player, "AnimalEmpathy")
AND
SysStatus("Kalavinka_DivinityUnleashed", _)
THEN
SetTag(_Player, "LLINNATE_PETPAL");
// [END_NO_OSITOOLS]
//END_REGION

//REGION PET_PAL_TAG
IF
ObjectWasTagged(_Char, "LLINNATE_PETPAL")
THEN
SetTag(_Char, "PETPAL");

IF
ObjectLostTag((CHARACTERGUID)_Char, "LLINNATE_PETPAL")
AND
CharacterHasTalent(_Char, "AnimalEmpathy", 0)
THEN
ClearTag(_Char, "PETPAL");

IF
ObjectLostTag((CHARACTERGUID)_Char, "PETPAL")
AND
IsTagged(_Char, "LLINNATE_PETPAL", 1)
AND
NOT DB_LLINNATE_PreventTagSpam(_Char, "PETPAL") // In case some mod really doesn't want us to have the tag
THEN
DB_LLINNATE_PreventTagSpam(_Char, "PETPAL");
SetTag(_Char, "PETPAL");
ProcObjectTimer(_Char, "Timers_LLINNATE_ClearPetPalFailsafe", 1000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "Timers_LLINNATE_ClearPetPalFailsafe")
AND
DB_LLINNATE_PreventTagSpam(_Char, "PETPAL")
THEN
NOT DB_LLINNATE_PreventTagSpam(_Char, "PETPAL");
//END_REGION

//REGION ADD_TALENTS_NEW

// [BEGIN_NO_OSITOOLS]
PROC
LLINNATE_AddTalents((CHARACTERGUID)_Char, 1) // IsPlayer
AND
DB_LLINNATE_InnateTalents(_Talent)
AND
CharacterHasTalent(_Char, _Talent, 0)
THEN
LLINNATE_AddTalent(_Char, _Talent);
// [END_NO_OSITOOLS]

/* [OSITOOLS_ONLY]
PROC
LLINNATE_AddTalents((CHARACTERGUID)_Char, 1) // IsPlayer
AND
DB_LLINNATE_InnateTalents(_Talent)
AND
CharacterHasTalent(_Char, _Talent, 0)
THEN
LLINNATE_AddTalent(_Char, _Talent);

PROC
LLINNATE_AddTalents((CHARACTERGUID)_Char, 0) // NPC
AND
DB_LLINNATE_InnateTalents(_Talent)
AND
CharacterHasTalent(_Char, _Talent, 0)
THEN
NRD_LuaCall("LLINNATE_Ext_AddTalent", (STRING)_Char, _Talent);
*/

//REGION ADD_TO_ALL
/* Players/Origins may lose the talent from CC presets. */
PROC
LLINNATE_AddTalentsToAll()
AND
DB_IsPlayer(_Player)
THEN
LLINNATE_AddTalents(_Player, 1);

PROC
LLINNATE_AddTalentsToAll()
AND
DB_Origins(_Origin)
AND
NOT DB_IsPlayer(_Origin)
THEN
LLINNATE_AddTalents(_Origin, 0);

/*
For pre-existing saves where an NPC may be missing the talent for some reason.
Should probably not happen since the Character stat override adds the talent.
*/
/* [OSITOOLS_ONLY]
PROC
LLINNATE_AddTalentsToAll()
AND
DB_CurrentLevel(_Region)
AND
NOT DB_LLINNATE_IteratedLevel(_Region)
THEN
DB_LLINNATE_IteratedLevel(_Region);
CharacterLaunchOsirisOnlyIterator("LLINNATE_AddTalents");

IF
StoryEvent((CHARACTERGUID)_Char, "LLINNATE_AddTalents")
AND
CharacterIsPlayer(_Char, _IsPlayer)
THEN
LLINNATE_AddTalents(_Char, _IsPlayer);
*/
//END_REGION

//REGION PRESETS
PROC
Proc_ApplyPreset((CHARACTERGUID)_Char,(STRING)_Preset)
THEN
ProcObjectTimerCancel(_Char, "Timers_LLINNATE_CheckAddTalent");
ProcObjectTimer(_Char, "Timers_LLINNATE_CheckAddTalent", 500);

IF
StoryEvent((CHARACTERGUID)_Char, "LeaderLib_PresetApplied")
THEN
ProcObjectTimerCancel(_Char, "Timers_LLINNATE_CheckAddTalent");
ProcObjectTimer(_Char, "Timers_LLINNATE_CheckAddTalent", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "Timers_LLINNATE_CheckAddTalent")
AND
CharacterIsPlayer(_Char, _IsPlayer)
THEN
LLINNATE_AddTalents(_Char, _IsPlayer);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "Timers_LLINNATE_CheckAddTalent")
AND
CharacterHasTalent(_Char, "QuickStep", 1)
AND
CharacterHasTalent(_Char, "ViolentMagic", 1)
AND
CharacterHasTalent(_Char, "AnimalEmpathy", 1)
AND
ObjectGetFlag(_Char, "LLINNATE_AddTalents_FailsafeCheck", 1)
THEN
ObjectClearFlag(_Char, "LLINNATE_AddTalents_FailsafeCheck", 0);
//END_REGION

//REGION RE_INITIALIZE
IF
GlobalFlagSet("LLINNATE_RestartInitialization")
THEN
GlobalClearFlag("LLINNATE_RestartInitialization");

IF
GlobalFlagSet("LLINNATE_RestartInitialization")
AND
DB_IsPlayer(_Player)
THEN
ProcObjectTimerCancel(_Player, "Timers_LLINNATE_CheckAddTalent");
ProcObjectTimer(_Player, "Timers_LLINNATE_CheckAddTalent", 500);
//END_REGION

//REGION SKILL_REPLACERS
IF
ObjectFlagSet(_ReplacerFlag, (CHARACTERGUID)_Character, _Instance)
AND
DB_LLINNATE_Skills_Replacers(_ReplacerFlag, _RacialSkillResult, _OriginSkillResult)
THEN
ObjectClearFlag(_Character, _ReplacerFlag);
LLINNATE_ReplaceRacialSkill(_Character, _RacialSkillResult);
LLINNATE_ReplaceOriginSkill(_Character, _OriginSkillResult);
ObjectSetFlag(_Character, "LLINNATE_CanReverseSkillReplacer");

PROC
LLINNATE_RemoveReplacedRacialSkill((CHARACTERGUID)_Character)
AND
GetVarString(_Character, "LLINNATE_NewRacialSkill", _Skill)
AND
_Skill != ""
THEN
CharacterRemoveSkill(_Character, _Skill);
SetVarString(_Character, "LLINNATE_NewRacialSkill", "");

PROC
LLINNATE_ReplaceRacialSkill((CHARACTERGUID)_Character, (STRING)_NewSkill)
AND
_NewSkill != ""
AND
DB_LLINNATE_Skills_Race(_Tag, _Skill)
AND
_Skill != _NewSkill
AND
IsTagged(_Character, _Tag, 1)

THEN
CharacterRemoveSkill(_Character, _Skill);

PROC
LLINNATE_ReplaceRacialSkill((CHARACTERGUID)_Character, (STRING)_NewSkill)
AND
_NewSkill != ""
THEN
LLINNATE_RemoveReplacedRacialSkill(_Character);
CharacterAddSkill(_Character, _NewSkill, 1);
SetVarString(_Character, "LLINNATE_NewRacialSkill", _NewSkill);

PROC
LLINNATE_RemoveReplacedOriginSkill((CHARACTERGUID)_Character)
AND
GetVarString(_Character, "LLINNATE_NewOriginSkill", _Skill)
AND
_Skill != ""
THEN
CharacterRemoveSkill(_Character, _Skill);
SetVarString(_Character, "LLINNATE_NewOriginSkill", "");

PROC
LLINNATE_ReplaceOriginSkill((CHARACTERGUID)_Character, (STRING)_NewSkill)
AND
_NewSkill != ""
AND
DB_LLINNATE_Skills_Origins(_Tag, _Skill)
AND
IsTagged(_Character, _Tag, 1)
THEN
CharacterRemoveSkill(_Character, _Skill);

PROC
LLINNATE_ReplaceOriginSkill((CHARACTERGUID)_Character, (STRING)_NewSkill)
AND
_NewSkill != ""
THEN
LLINNATE_RemoveReplacedOriginSkill(_Character);
CharacterAddSkill(_Character, _NewSkill, 1);
SetVarString(_Character, "LLINNATE_NewOriginSkill", _NewSkill);

IF
ObjectFlagSet("LLINNATE_Commands_ReverseSkillReplacer", (CHARACTERGUID)_Character, _Instance)
THEN
ObjectClearFlag(_Character, "LLINNATE_Commands_ReverseSkillReplacer");
LLINNATE_RemoveReplacedRacialSkill(_Character);
LLINNATE_RemoveReplacedOriginSkill(_Character);
LLINNATE_RevertReplacedSkills(_Character);

PROC
LLINNATE_RevertReplacedSkills((CHARACTERGUID)_Character)
AND
DB_LLINNATE_Skills_Race(_Tag, _Skill)
AND
IsTagged(_Character, _Tag, 1)
THEN
CharacterAddSkill(_Character, _Skill, 1);

PROC
LLINNATE_RevertReplacedSkills((CHARACTERGUID)_Character)
AND
DB_LLINNATE_Skills_Origins(_Tag, _Skill)
AND
IsTagged(_Character, _Tag, 1)
THEN
CharacterAddSkill(_Character, _Skill, 1);

IF
TextEventSet("llinnate_settings")
AND
CharacterGetHostCharacter(_Host)
AND
QRY_SpeakerIsAvailable(_Host)
THEN
Proc_StartDialog(0, "LLINNATE_SettingsMenu", _Host, _Host);
//END_REGION

//REGION VERSIONING
IF
GameStarted(_Level, _)
AND
IsGameLevel(_Level, 1)
AND
LLINNATE_Updater_QRY_UpdateNeeded("1.1.0.0")
THEN
LLINNATE_Internal_RegisterMod();

PROC
LLINNATE_Internal_RegisterMod()
THEN
LLINNATE_Updater_RemoveOldVersions("1.1.0.0");
LLINNATE_Updater_SetVersion("1.1.0.0");

QRY
LLINNATE_Updater_QRY_UpdateNeeded((STRING)_Version)
AND
NOT DB_Mods_Registered("InnateTalents", "LaughingLeader", _Version)
THEN
DB_NOOP(1);

PROC
LLINNATE_Updater_RemoveOldVersions((STRING)_NextVersion)
AND
DB_Mods_Registered("InnateTalents", "LaughingLeader", _Version)
THEN
NOT DB_Mods_Registered("InnateTalents", "LaughingLeader", _Version);
LLINNATE_Updater_VersionUpdated(_Version, _NextVersion);

PROC
LLINNATE_Updater_VersionUpdated((STRING)_Version, (STRING)_NextVersion)
THEN
DB_NOOP(1);

PROC
LLINNATE_Updater_SetVersion((STRING)_Version)
AND
GlobalGetFlag("LeaderLib_Initialized", 1)
THEN
//Fire LeaderLib ModUpdated procs.
DB_LeaderLib_ModApi_RegisterMod("InnateTalents", "LaughingLeader", _Version);

PROC
LLINNATE_Updater_SetVersion((STRING)_Version)
AND
NOT GlobalGetFlag("LeaderLib_Initialized", 1)
THEN
DB_Mods_Registered("InnateTalents", "LaughingLeader", _Version);
//END_REGION

//REGION LEADERLIB
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
NOT DB_LLINNATE_RegisteredLeaderLibSettings(_)
THEN
DB_LLINNATE_RegisteredLeaderLibSettings(1);

IF
DB_LLINNATE_RegisteredLeaderLibSettings(1)
THEN
DB_LeaderLib_ModApi_RegisterMenu("LaughingLeader.InnateTalents", "[Innate Talents] Settings", "LLINNATE_SettingsMenu", "InnateTalents", "LaughingLeader");
DB_LeaderLib_ModApi_RegisterActiveGoal("InnateTalents", "LaughingLeader", "LaughingLeader_InnateTalents");

PROC
LLINNATE_Updater_VersionUpdated((STRING)_Version, "1.0.0.3")
THEN
DB_Mods_ActiveGoal("InnateTalents", "LaughingLeader", "LaughingLeader_InnateTalents");
DB_LeaderLib_ModApi_RegisterMenu("LaughingLeader.InnateTalents", "[Innate Talents] Settings", "LLINNATE_SettingsMenu", "InnateTalents", "LaughingLeader");
//END_REGION

//REGION LOST_WALLET
IF
GameStarted(_Level, _)
AND
IsGameLevel(_Level, 1)
AND
NOT DB_GlobalFlag("LLINNATE_SpawnedLostWallet")
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LLRACE_LostWallet_d3215b98-ddcc-41bd-ad46-e41b14216014", _x, _y, _z, _Wallet)
AND
FindValidPosition(_x, _y, _z, 10.0, _Wallet, _tx, _ty, _tz)
THEN
GlobalSetFlag("LLINNATE_SpawnedLostWallet");
TeleportToPosition(_Wallet, _tx, _ty, _tz, "", 0);

IF
CharacterUsedItemTemplate(_Player, "LLRACE_LostWallet_d3215b98-ddcc-41bd-ad46-e41b14216014", _Wallet)
AND
DB_IsPlayer(_Player)
AND
QRY_SpeakerIsAvailable(_Player)
AND
QRY_SpeakerIsAvailable(_Wallet)
THEN
Proc_StartDialog(0, "LLINNATE_LostWallet", _Wallet, _Player);

IF
DialogEnded("LLINNATE_LostWallet", _Instance)
AND
DialogGetInvolvedNPC(_Instance, 1, (ITEMGUID)_Wallet)
AND
ObjectGetFlag(_Wallet, "LLINNATE_LostWallet_TookGold", 1)
THEN
ItemDestroy(_Wallet);

IF
ObjectFlagSet("LLINNATE_LostWallet_AllGold", (CHARACTERGUID)_Player, _)
THEN
CharacterAddGold(_Player, 2000);

IF
ObjectFlagSet("LLINNATE_LostWallet_HalfGold", (CHARACTERGUID)_Player, _)
THEN
CharacterAddGold(_Player, 1000);

IF
ObjectFlagSet("LLINNATE_LostWallet_SomeGold", (CHARACTERGUID)_Player, _)
THEN
CharacterAddGold(_Player, 250);
CharacterStatusText(_Player, "<font color='#97FBFF'>Saintly</font>");
PlayEffect(_Player, "RS3_FX_Skills_Divine_Bless_Impact_01");
//END_REGION

//REGION COMMANDS
IF
ObjectFlagSet("LLINNATE_Commands_AddResurrection", (CHARACTERGUID)_Player, _)
THEN
CharacterAddSkill(_Player, "Teleportation_StoryModeFreeResurrect", 1);
ObjectClearFlag(_Player, "LLINNATE_Commands_AddResurrection", 0);

IF
ObjectFlagSet("LLINNATE_Commands_RemoveResurrection", (CHARACTERGUID)_Player, _)
THEN
CharacterRemoveSkill(_Player, "Teleportation_StoryModeFreeResurrect");
ObjectClearFlag(_Player, "LLINNATE_Commands_RemoveResurrection", 0);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
